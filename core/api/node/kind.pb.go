// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/node/kind.proto

package node // import "berty.tech/core/api/node"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import network "berty.tech/core/network"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Kind int32

const (
	// Unknown events should never happen
	Kind_Unknown            Kind = 0
	Kind_NodeStarted        Kind = 1
	Kind_NodeStopped        Kind = 2
	Kind_NodeIsAlive        Kind = 3
	Kind_BackgroundCritical Kind = 4
	Kind_BackgroundError    Kind = 5
	Kind_BackgroundWarn     Kind = 6
	Kind_BackgroundInfo     Kind = 7
	Kind_Debug              Kind = 8
	Kind_Statistics         Kind = 9
)

var Kind_name = map[int32]string{
	0: "Unknown",
	1: "NodeStarted",
	2: "NodeStopped",
	3: "NodeIsAlive",
	4: "BackgroundCritical",
	5: "BackgroundError",
	6: "BackgroundWarn",
	7: "BackgroundInfo",
	8: "Debug",
	9: "Statistics",
}
var Kind_value = map[string]int32{
	"Unknown":            0,
	"NodeStarted":        1,
	"NodeStopped":        2,
	"NodeIsAlive":        3,
	"BackgroundCritical": 4,
	"BackgroundError":    5,
	"BackgroundWarn":     6,
	"BackgroundInfo":     7,
	"Debug":              8,
	"Statistics":         9,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}
func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{0}
}

type NodeStartedAttrs struct {
	T                    bool     `protobuf:"varint,1,opt,name=T,proto3" json:"T,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStartedAttrs) Reset()         { *m = NodeStartedAttrs{} }
func (m *NodeStartedAttrs) String() string { return proto.CompactTextString(m) }
func (*NodeStartedAttrs) ProtoMessage()    {}
func (*NodeStartedAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{0}
}
func (m *NodeStartedAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NodeStartedAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NodeStartedAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NodeStartedAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStartedAttrs.Merge(dst, src)
}
func (m *NodeStartedAttrs) XXX_Size() int {
	return m.Size()
}
func (m *NodeStartedAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStartedAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStartedAttrs proto.InternalMessageInfo

func (m *NodeStartedAttrs) GetT() bool {
	if m != nil {
		return m.T
	}
	return false
}

type NodeStoppedAttrs struct {
	ErrMsg               string   `protobuf:"bytes,1,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStoppedAttrs) Reset()         { *m = NodeStoppedAttrs{} }
func (m *NodeStoppedAttrs) String() string { return proto.CompactTextString(m) }
func (*NodeStoppedAttrs) ProtoMessage()    {}
func (*NodeStoppedAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{1}
}
func (m *NodeStoppedAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NodeStoppedAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NodeStoppedAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NodeStoppedAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStoppedAttrs.Merge(dst, src)
}
func (m *NodeStoppedAttrs) XXX_Size() int {
	return m.Size()
}
func (m *NodeStoppedAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStoppedAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStoppedAttrs proto.InternalMessageInfo

func (m *NodeStoppedAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type NodeIsAliveAttrs struct {
	T                    bool     `protobuf:"varint,1,opt,name=T,proto3" json:"T,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeIsAliveAttrs) Reset()         { *m = NodeIsAliveAttrs{} }
func (m *NodeIsAliveAttrs) String() string { return proto.CompactTextString(m) }
func (*NodeIsAliveAttrs) ProtoMessage()    {}
func (*NodeIsAliveAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{2}
}
func (m *NodeIsAliveAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NodeIsAliveAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NodeIsAliveAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NodeIsAliveAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeIsAliveAttrs.Merge(dst, src)
}
func (m *NodeIsAliveAttrs) XXX_Size() int {
	return m.Size()
}
func (m *NodeIsAliveAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeIsAliveAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_NodeIsAliveAttrs proto.InternalMessageInfo

func (m *NodeIsAliveAttrs) GetT() bool {
	if m != nil {
		return m.T
	}
	return false
}

type BackgroundCriticalAttrs struct {
	ErrMsg               string   `protobuf:"bytes,1,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackgroundCriticalAttrs) Reset()         { *m = BackgroundCriticalAttrs{} }
func (m *BackgroundCriticalAttrs) String() string { return proto.CompactTextString(m) }
func (*BackgroundCriticalAttrs) ProtoMessage()    {}
func (*BackgroundCriticalAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{3}
}
func (m *BackgroundCriticalAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackgroundCriticalAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackgroundCriticalAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BackgroundCriticalAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackgroundCriticalAttrs.Merge(dst, src)
}
func (m *BackgroundCriticalAttrs) XXX_Size() int {
	return m.Size()
}
func (m *BackgroundCriticalAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_BackgroundCriticalAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_BackgroundCriticalAttrs proto.InternalMessageInfo

func (m *BackgroundCriticalAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type BackgroundErrorAttrs struct {
	ErrMsg               string   `protobuf:"bytes,1,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackgroundErrorAttrs) Reset()         { *m = BackgroundErrorAttrs{} }
func (m *BackgroundErrorAttrs) String() string { return proto.CompactTextString(m) }
func (*BackgroundErrorAttrs) ProtoMessage()    {}
func (*BackgroundErrorAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{4}
}
func (m *BackgroundErrorAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackgroundErrorAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackgroundErrorAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BackgroundErrorAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackgroundErrorAttrs.Merge(dst, src)
}
func (m *BackgroundErrorAttrs) XXX_Size() int {
	return m.Size()
}
func (m *BackgroundErrorAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_BackgroundErrorAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_BackgroundErrorAttrs proto.InternalMessageInfo

func (m *BackgroundErrorAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type BackgroundWarnAttrs struct {
	ErrMsg               string   `protobuf:"bytes,1,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackgroundWarnAttrs) Reset()         { *m = BackgroundWarnAttrs{} }
func (m *BackgroundWarnAttrs) String() string { return proto.CompactTextString(m) }
func (*BackgroundWarnAttrs) ProtoMessage()    {}
func (*BackgroundWarnAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{5}
}
func (m *BackgroundWarnAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackgroundWarnAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackgroundWarnAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *BackgroundWarnAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackgroundWarnAttrs.Merge(dst, src)
}
func (m *BackgroundWarnAttrs) XXX_Size() int {
	return m.Size()
}
func (m *BackgroundWarnAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_BackgroundWarnAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_BackgroundWarnAttrs proto.InternalMessageInfo

func (m *BackgroundWarnAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DebugAttrs struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugAttrs) Reset()         { *m = DebugAttrs{} }
func (m *DebugAttrs) String() string { return proto.CompactTextString(m) }
func (*DebugAttrs) ProtoMessage()    {}
func (*DebugAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{6}
}
func (m *DebugAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DebugAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugAttrs.Merge(dst, src)
}
func (m *DebugAttrs) XXX_Size() int {
	return m.Size()
}
func (m *DebugAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_DebugAttrs proto.InternalMessageInfo

func (m *DebugAttrs) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type StatisticsAttrs struct {
	ErrMsg                string                  `protobuf:"bytes,1,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	TotalNetworkBandwidth *network.BandwidthStats `protobuf:"bytes,2,opt,name=total_network_bandwidth,json=totalNetworkBandwidth" json:"total_network_bandwidth,omitempty"`
	PeersCount            int32                   `protobuf:"varint,3,opt,name=peers_count,json=peersCount,proto3" json:"peers_count,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *StatisticsAttrs) Reset()         { *m = StatisticsAttrs{} }
func (m *StatisticsAttrs) String() string { return proto.CompactTextString(m) }
func (*StatisticsAttrs) ProtoMessage()    {}
func (*StatisticsAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_kind_aacf1dc4f3c803b8, []int{7}
}
func (m *StatisticsAttrs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatisticsAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatisticsAttrs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StatisticsAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsAttrs.Merge(dst, src)
}
func (m *StatisticsAttrs) XXX_Size() int {
	return m.Size()
}
func (m *StatisticsAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsAttrs proto.InternalMessageInfo

func (m *StatisticsAttrs) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *StatisticsAttrs) GetTotalNetworkBandwidth() *network.BandwidthStats {
	if m != nil {
		return m.TotalNetworkBandwidth
	}
	return nil
}

func (m *StatisticsAttrs) GetPeersCount() int32 {
	if m != nil {
		return m.PeersCount
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeStartedAttrs)(nil), "berty.node.NodeStartedAttrs")
	proto.RegisterType((*NodeStoppedAttrs)(nil), "berty.node.NodeStoppedAttrs")
	proto.RegisterType((*NodeIsAliveAttrs)(nil), "berty.node.NodeIsAliveAttrs")
	proto.RegisterType((*BackgroundCriticalAttrs)(nil), "berty.node.BackgroundCriticalAttrs")
	proto.RegisterType((*BackgroundErrorAttrs)(nil), "berty.node.BackgroundErrorAttrs")
	proto.RegisterType((*BackgroundWarnAttrs)(nil), "berty.node.BackgroundWarnAttrs")
	proto.RegisterType((*DebugAttrs)(nil), "berty.node.DebugAttrs")
	proto.RegisterType((*StatisticsAttrs)(nil), "berty.node.StatisticsAttrs")
	proto.RegisterEnum("berty.node.Kind", Kind_name, Kind_value)
}
func (m *NodeStartedAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NodeStartedAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.T {
		dAtA[i] = 0x8
		i++
		if m.T {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NodeStoppedAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NodeStoppedAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NodeIsAliveAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NodeIsAliveAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.T {
		dAtA[i] = 0x8
		i++
		if m.T {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BackgroundCriticalAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackgroundCriticalAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BackgroundErrorAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackgroundErrorAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BackgroundWarnAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackgroundWarnAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DebugAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Msg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.Msg)))
		i += copy(dAtA[i:], m.Msg)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StatisticsAttrs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatisticsAttrs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ErrMsg) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKind(dAtA, i, uint64(len(m.ErrMsg)))
		i += copy(dAtA[i:], m.ErrMsg)
	}
	if m.TotalNetworkBandwidth != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.TotalNetworkBandwidth.Size()))
		n1, err := m.TotalNetworkBandwidth.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.PeersCount != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintKind(dAtA, i, uint64(m.PeersCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintKind(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *NodeStartedAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.T {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NodeStoppedAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NodeIsAliveAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.T {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BackgroundCriticalAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BackgroundErrorAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BackgroundWarnAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatisticsAttrs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ErrMsg)
	if l > 0 {
		n += 1 + l + sovKind(uint64(l))
	}
	if m.TotalNetworkBandwidth != nil {
		l = m.TotalNetworkBandwidth.Size()
		n += 1 + l + sovKind(uint64(l))
	}
	if m.PeersCount != 0 {
		n += 1 + sovKind(uint64(m.PeersCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKind(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozKind(x uint64) (n int) {
	return sovKind(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NodeStartedAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NodeStartedAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NodeStartedAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field T", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.T = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NodeStoppedAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NodeStoppedAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NodeStoppedAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NodeIsAliveAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NodeIsAliveAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NodeIsAliveAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field T", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.T = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BackgroundCriticalAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackgroundCriticalAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackgroundCriticalAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BackgroundErrorAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackgroundErrorAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackgroundErrorAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BackgroundWarnAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackgroundWarnAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackgroundWarnAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DebugAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DebugAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatisticsAttrs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKind
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatisticsAttrs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatisticsAttrs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNetworkBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKind
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TotalNetworkBandwidth == nil {
				m.TotalNetworkBandwidth = &network.BandwidthStats{}
			}
			if err := m.TotalNetworkBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeersCount", wireType)
			}
			m.PeersCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKind
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PeersCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKind(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKind
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKind(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKind
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKind
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthKind
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowKind
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipKind(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthKind = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKind   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("api/node/kind.proto", fileDescriptor_kind_aacf1dc4f3c803b8) }

var fileDescriptor_kind_aacf1dc4f3c803b8 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xd1, 0x6a, 0x13, 0x41,
	0x14, 0x86, 0x3b, 0x4d, 0x93, 0x34, 0x27, 0xd2, 0x0c, 0x93, 0xd6, 0x84, 0x82, 0x6b, 0xc8, 0x55,
	0xa8, 0xb0, 0x0b, 0xf5, 0x09, 0x9a, 0xea, 0x45, 0x11, 0x7b, 0x91, 0xb6, 0x08, 0xde, 0x84, 0xc9,
	0xce, 0xb8, 0x1d, 0x92, 0xce, 0x2c, 0x67, 0x4e, 0x0c, 0xbe, 0x89, 0xd7, 0x3e, 0x84, 0xcf, 0xe0,
	0xa5, 0x8f, 0x20, 0xf1, 0x45, 0x64, 0x77, 0xb3, 0xae, 0x51, 0x69, 0xee, 0x86, 0xef, 0xfc, 0xe7,
	0x1f, 0xf8, 0xff, 0x03, 0x5d, 0x99, 0x9a, 0xc8, 0x3a, 0xa5, 0xa3, 0xb9, 0xb1, 0x2a, 0x4c, 0xd1,
	0x91, 0x13, 0x30, 0xd3, 0x48, 0x9f, 0xc2, 0x0c, 0x9f, 0x1e, 0x27, 0x2e, 0x71, 0x39, 0x8e, 0xb2,
	0x57, 0xa1, 0x38, 0x3d, 0xb1, 0x9a, 0x56, 0x0e, 0xe7, 0xd1, 0x83, 0x26, 0x34, 0xb1, 0x2f, 0xf0,
	0x70, 0x00, 0xfc, 0xda, 0x29, 0x7d, 0x43, 0x12, 0x49, 0xab, 0x0b, 0x22, 0xf4, 0xe2, 0x09, 0xb0,
	0xdb, 0x3e, 0x1b, 0xb0, 0xd1, 0xe1, 0x84, 0xdd, 0x0e, 0x5f, 0x94, 0x0a, 0x97, 0xa6, 0xa5, 0xa2,
	0x07, 0x4d, 0x8d, 0x38, 0x7d, 0xf0, 0x49, 0xae, 0x6b, 0x4d, 0x1a, 0x1a, 0xf1, 0xad, 0x4f, 0x4a,
	0xbb, 0x2b, 0x7f, 0xb1, 0x30, 0x1f, 0xf5, 0xff, 0xec, 0xce, 0xa1, 0x37, 0x96, 0xf1, 0x3c, 0x41,
	0xb7, 0xb4, 0xea, 0x12, 0x0d, 0x99, 0x58, 0x2e, 0x76, 0xb8, 0x46, 0x70, 0x5c, 0xed, 0xbc, 0x46,
	0x74, 0xb8, 0x63, 0x21, 0x84, 0x6e, 0xb5, 0xf0, 0x4e, 0xa2, 0xdd, 0xa1, 0x0f, 0x00, 0x5e, 0xe9,
	0xd9, 0x32, 0x29, 0x64, 0x1c, 0x6a, 0x95, 0x24, 0x7b, 0x0e, 0xbf, 0x30, 0xe8, 0xdc, 0x90, 0x24,
	0xe3, 0xc9, 0xc4, 0xfe, 0x71, 0x33, 0x71, 0x07, 0x3d, 0x72, 0x24, 0x17, 0xd3, 0x4d, 0xe2, 0xd3,
	0x99, 0xb4, 0x6a, 0x65, 0x14, 0xdd, 0xf7, 0xf7, 0x07, 0x6c, 0xd4, 0x3e, 0x7f, 0x16, 0x6e, 0xda,
	0x2a, 0xe6, 0xe1, 0xb8, 0x9c, 0x67, 0x5f, 0xf8, 0xc9, 0x49, 0xbe, 0x7d, 0x5d, 0x0c, 0x7f, 0xcf,
	0xc4, 0x73, 0x68, 0xa7, 0x5a, 0xa3, 0x9f, 0xc6, 0x6e, 0x69, 0xa9, 0x5f, 0x1b, 0xb0, 0x51, 0x7d,
	0x02, 0x39, 0xba, 0xcc, 0xc8, 0xd9, 0x57, 0x06, 0x07, 0x6f, 0x8c, 0x55, 0xa2, 0x0d, 0xcd, 0x3b,
	0x3b, 0xb7, 0x6e, 0x65, 0xf9, 0x9e, 0xe8, 0x40, 0xfb, 0x8f, 0x82, 0x39, 0xab, 0x40, 0xde, 0x27,
	0xdf, 0x2f, 0xc1, 0xa6, 0x33, 0x5e, 0x13, 0x4f, 0x41, 0xfc, 0x5b, 0x11, 0x3f, 0x10, 0x5d, 0xe8,
	0xfc, 0x55, 0x03, 0xaf, 0x0b, 0x01, 0x47, 0xdb, 0x51, 0xf3, 0xc6, 0x36, 0xbb, 0xb2, 0x1f, 0x1c,
	0x6f, 0x8a, 0x16, 0xd4, 0xf3, 0x88, 0xf9, 0xa1, 0x38, 0x02, 0xa8, 0xc2, 0xe4, 0xad, 0xf1, 0xd9,
	0xb7, 0x75, 0xc0, 0xbe, 0xaf, 0x03, 0xf6, 0x63, 0x1d, 0xb0, 0xcf, 0x3f, 0x83, 0xbd, 0xf7, 0xfd,
	0x22, 0x20, 0xd2, 0xf1, 0x7d, 0x14, 0x3b, 0xd4, 0x51, 0x79, 0xf3, 0xb3, 0x46, 0x7e, 0xb6, 0x2f,
	0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x94, 0x54, 0x3b, 0x06, 0x03, 0x00, 0x00,
}
