# GENERATED CODE -- DO NOT EDIT!

schema: service.gen.graphql


# Let gqlgen know where to put the generated server
exec:
  filename: graph/generated/generated.gen.go
  package: generated

# Let gqlgen know where to the generated models (if any)
model:
  filename: models/generated.gen.go
  package: models

# Optional, turns on resolver stub generation
resolver:
  filename: resolver.go # where to write them
  type: Resolver  # whats the resolver root implementation type called?

# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  ID:
    model: berty.tech/core/api/node/graphql/models.ID
  String:
    model: berty.tech/core/api/node/graphql/models.String
  Enum:
    model: berty.tech/core/api/node/graphql/models.Enum
  Double:
    model: berty.tech/core/api/node/graphql/models.Double
  Float64:
    model: berty.tech/core/api/node/graphql/models.Double
  Int64:
    model: berty.tech/core/api/node/graphql/models.Int64
  Uint64:
    model: berty.tech/core/api/node/graphql/models.Uint64
  Int32:
    model: berty.tech/core/api/node/graphql/models.Int32
  Uint32:
    model: berty.tech/core/api/node/graphql/models.Uint32
  SInt32:
    model: berty.tech/core/api/node/graphql/models.SInt32
  SInt64:
    model: berty.tech/core/api/node/graphql/models.SInt64
  Fixed64:
    model: berty.tech/core/api/node/graphql/models.Fixed64
  Fixed32:
    model: berty.tech/core/api/node/graphql/models.Fixed32
  Bool:
    model: berty.tech/core/api/node/graphql/models.Bool
  Byte:
    model: berty.tech/core/api/node/graphql/models.Byte
  SFixed64:
    model: berty.tech/core/api/node/graphql/models.SFixed64
  SFixed32:
    model: berty.tech/core/api/node/graphql/models.SFixed32
  GoogleProtobufTimestamp:
    model: berty.tech/core/api/node/graphql/models.Time
  GoogleProtobufTimestampInput:
    model: berty.tech/core/api/node/graphql/models.Time
  GoogleProtobufTimestampPayload:
    model: berty.tech/core/api/node/graphql/models.Time


  GoogleProtobufFileDescriptorSet:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorSet
    fields:
      file:
  GoogleProtobufFileDescriptorSetInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorSet
    fields:
      file:
  GoogleProtobufFileDescriptorSetPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorSet
    fields:
      file:

  GoogleProtobufFileDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorProto
    fields:
      name:
      package:
      dependency:
      publicDependency:
      weakDependency:
      messageType:
      enumType:
      service:
      extension:
      options:
      sourceCodeInfo:
      syntax:
  GoogleProtobufFileDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorProto
    fields:
      name:
      package:
      dependency:
      publicDependency:
      weakDependency:
      messageType:
      enumType:
      service:
      extension:
      options:
      sourceCodeInfo:
      syntax:
  GoogleProtobufFileDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileDescriptorProto
    fields:
      name:
      package:
      dependency:
      publicDependency:
      weakDependency:
      messageType:
      enumType:
      service:
      extension:
      options:
      sourceCodeInfo:
      syntax:

  GoogleProtobufDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto
    fields:
      name:
      field:
      extension:
      nestedType:
      enumType:
      extensionRange:
      oneofDecl:
      options:
      reservedRange:
      reservedName:
  GoogleProtobufDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto
    fields:
      name:
      field:
      extension:
      nestedType:
      enumType:
      extensionRange:
      oneofDecl:
      options:
      reservedRange:
      reservedName:
  GoogleProtobufDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto
    fields:
      name:
      field:
      extension:
      nestedType:
      enumType:
      extensionRange:
      oneofDecl:
      options:
      reservedRange:
      reservedName:

  GoogleProtobufDescriptorProtoExtensionRange:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ExtensionRange
    fields:
      start:
      end:
      options:
  GoogleProtobufExtensionRangeInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ExtensionRange
    fields:
      start:
      end:
      options:
  GoogleProtobufExtensionRangePayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ExtensionRange
    fields:
      start:
      end:
      options:

  GoogleProtobufDescriptorProtoReservedRange:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ReservedRange
    fields:
      start:
      end:
  GoogleProtobufReservedRangeInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ReservedRange
    fields:
      start:
      end:
  GoogleProtobufReservedRangePayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.DescriptorProto_ReservedRange
    fields:
      start:
      end:

  GoogleProtobufExtensionRangeOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ExtensionRangeOptions
    fields:
      uninterpretedOption:
  GoogleProtobufExtensionRangeOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ExtensionRangeOptions
    fields:
      uninterpretedOption:
  GoogleProtobufExtensionRangeOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ExtensionRangeOptions
    fields:
      uninterpretedOption:

  GoogleProtobufFieldDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldDescriptorProto
    fields:
      name:
      number:
      label:
      type:
      typeName:
      extendee:
      defaultValue:
      oneofIndex:
      jsonName:
      options:
  GoogleProtobufFieldDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldDescriptorProto
    fields:
      name:
      number:
      label:
      type:
      typeName:
      extendee:
      defaultValue:
      oneofIndex:
      jsonName:
      options:
  GoogleProtobufFieldDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldDescriptorProto
    fields:
      name:
      number:
      label:
      type:
      typeName:
      extendee:
      defaultValue:
      oneofIndex:
      jsonName:
      options:

  GoogleProtobufOneofDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofDescriptorProto
    fields:
      name:
      options:
  GoogleProtobufOneofDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofDescriptorProto
    fields:
      name:
      options:
  GoogleProtobufOneofDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofDescriptorProto
    fields:
      name:
      options:

  GoogleProtobufEnumDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto
    fields:
      name:
      value:
      options:
      reservedRange:
      reservedName:
  GoogleProtobufEnumDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto
    fields:
      name:
      value:
      options:
      reservedRange:
      reservedName:
  GoogleProtobufEnumDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto
    fields:
      name:
      value:
      options:
      reservedRange:
      reservedName:

  GoogleProtobufEnumDescriptorProtoEnumReservedRange:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto_EnumReservedRange
    fields:
      start:
      end:
  GoogleProtobufEnumReservedRangeInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto_EnumReservedRange
    fields:
      start:
      end:
  GoogleProtobufEnumReservedRangePayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumDescriptorProto_EnumReservedRange
    fields:
      start:
      end:

  GoogleProtobufEnumValueDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueDescriptorProto
    fields:
      name:
      number:
      options:
  GoogleProtobufEnumValueDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueDescriptorProto
    fields:
      name:
      number:
      options:
  GoogleProtobufEnumValueDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueDescriptorProto
    fields:
      name:
      number:
      options:

  GoogleProtobufServiceDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceDescriptorProto
    fields:
      name:
      method:
      options:
  GoogleProtobufServiceDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceDescriptorProto
    fields:
      name:
      method:
      options:
  GoogleProtobufServiceDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceDescriptorProto
    fields:
      name:
      method:
      options:

  GoogleProtobufMethodDescriptorProto:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodDescriptorProto
    fields:
      name:
      inputType:
      outputType:
      options:
      clientStreaming:
      serverStreaming:
  GoogleProtobufMethodDescriptorProtoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodDescriptorProto
    fields:
      name:
      inputType:
      outputType:
      options:
      clientStreaming:
      serverStreaming:
  GoogleProtobufMethodDescriptorProtoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodDescriptorProto
    fields:
      name:
      inputType:
      outputType:
      options:
      clientStreaming:
      serverStreaming:

  GoogleProtobufFileOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileOptions
    fields:
      javaPackage:
      javaOuterClassname:
      javaMultipleFiles:
      javaGenerateEqualsAndHash:
      javaStringCheckUtf8:
      optimizeFor:
      goPackage:
      ccGenericServices:
      javaGenericServices:
      pyGenericServices:
      phpGenericServices:
      deprecated:
      ccEnableArenas:
      objcClassPrefix:
      csharpNamespace:
      swiftPrefix:
      phpClassPrefix:
      phpNamespace:
      phpMetadataNamespace:
      rubyPackage:
      uninterpretedOption:
  GoogleProtobufFileOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileOptions
    fields:
      javaPackage:
      javaOuterClassname:
      javaMultipleFiles:
      javaGenerateEqualsAndHash:
      javaStringCheckUtf8:
      optimizeFor:
      goPackage:
      ccGenericServices:
      javaGenericServices:
      pyGenericServices:
      phpGenericServices:
      deprecated:
      ccEnableArenas:
      objcClassPrefix:
      csharpNamespace:
      swiftPrefix:
      phpClassPrefix:
      phpNamespace:
      phpMetadataNamespace:
      rubyPackage:
      uninterpretedOption:
  GoogleProtobufFileOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FileOptions
    fields:
      javaPackage:
      javaOuterClassname:
      javaMultipleFiles:
      javaGenerateEqualsAndHash:
      javaStringCheckUtf8:
      optimizeFor:
      goPackage:
      ccGenericServices:
      javaGenericServices:
      pyGenericServices:
      phpGenericServices:
      deprecated:
      ccEnableArenas:
      objcClassPrefix:
      csharpNamespace:
      swiftPrefix:
      phpClassPrefix:
      phpNamespace:
      phpMetadataNamespace:
      rubyPackage:
      uninterpretedOption:

  GoogleProtobufMessageOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MessageOptions
    fields:
      messageSetWireFormat:
      noStandardDescriptorAccessor:
      deprecated:
      mapEntry:
      uninterpretedOption:
  GoogleProtobufMessageOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MessageOptions
    fields:
      messageSetWireFormat:
      noStandardDescriptorAccessor:
      deprecated:
      mapEntry:
      uninterpretedOption:
  GoogleProtobufMessageOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MessageOptions
    fields:
      messageSetWireFormat:
      noStandardDescriptorAccessor:
      deprecated:
      mapEntry:
      uninterpretedOption:

  GoogleProtobufFieldOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldOptions
    fields:
      ctype:
      packed:
      jstype:
      lazy:
      deprecated:
      weak:
      uninterpretedOption:
  GoogleProtobufFieldOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldOptions
    fields:
      ctype:
      packed:
      jstype:
      lazy:
      deprecated:
      weak:
      uninterpretedOption:
  GoogleProtobufFieldOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.FieldOptions
    fields:
      ctype:
      packed:
      jstype:
      lazy:
      deprecated:
      weak:
      uninterpretedOption:

  GoogleProtobufOneofOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofOptions
    fields:
      uninterpretedOption:
  GoogleProtobufOneofOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofOptions
    fields:
      uninterpretedOption:
  GoogleProtobufOneofOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.OneofOptions
    fields:
      uninterpretedOption:

  GoogleProtobufEnumOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumOptions
    fields:
      allowAlias:
      deprecated:
      uninterpretedOption:
  GoogleProtobufEnumOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumOptions
    fields:
      allowAlias:
      deprecated:
      uninterpretedOption:
  GoogleProtobufEnumOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumOptions
    fields:
      allowAlias:
      deprecated:
      uninterpretedOption:

  GoogleProtobufEnumValueOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueOptions
    fields:
      deprecated:
      uninterpretedOption:
  GoogleProtobufEnumValueOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueOptions
    fields:
      deprecated:
      uninterpretedOption:
  GoogleProtobufEnumValueOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.EnumValueOptions
    fields:
      deprecated:
      uninterpretedOption:

  GoogleProtobufServiceOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceOptions
    fields:
      deprecated:
      uninterpretedOption:
  GoogleProtobufServiceOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceOptions
    fields:
      deprecated:
      uninterpretedOption:
  GoogleProtobufServiceOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.ServiceOptions
    fields:
      deprecated:
      uninterpretedOption:

  GoogleProtobufMethodOptions:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodOptions
    fields:
      deprecated:
      idempotencyLevel:
      uninterpretedOption:
  GoogleProtobufMethodOptionsInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodOptions
    fields:
      deprecated:
      idempotencyLevel:
      uninterpretedOption:
  GoogleProtobufMethodOptionsPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.MethodOptions
    fields:
      deprecated:
      idempotencyLevel:
      uninterpretedOption:

  GoogleProtobufUninterpretedOption:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption
    fields:
      name:
      identifierValue:
      positiveIntValue:
      negativeIntValue:
      doubleValue:
      stringValue:
      aggregateValue:
  GoogleProtobufUninterpretedOptionInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption
    fields:
      name:
      identifierValue:
      positiveIntValue:
      negativeIntValue:
      doubleValue:
      stringValue:
      aggregateValue:
  GoogleProtobufUninterpretedOptionPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption
    fields:
      name:
      identifierValue:
      positiveIntValue:
      negativeIntValue:
      doubleValue:
      stringValue:
      aggregateValue:

  GoogleProtobufUninterpretedOptionNamePart:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption_NamePart
    fields:
      namePart:
      isExtension:
  GoogleProtobufNamePartInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption_NamePart
    fields:
      namePart:
      isExtension:
  GoogleProtobufNamePartPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.UninterpretedOption_NamePart
    fields:
      namePart:
      isExtension:

  GoogleProtobufSourceCodeInfo:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo
    fields:
      location:
  GoogleProtobufSourceCodeInfoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo
    fields:
      location:
  GoogleProtobufSourceCodeInfoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo
    fields:
      location:

  GoogleProtobufSourceCodeInfoLocation:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo_Location
    fields:
      path:
      span:
      leadingComments:
      trailingComments:
      leadingDetachedComments:
  GoogleProtobufLocationInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo_Location
    fields:
      path:
      span:
      leadingComments:
      trailingComments:
      leadingDetachedComments:
  GoogleProtobufLocationPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.SourceCodeInfo_Location
    fields:
      path:
      span:
      leadingComments:
      trailingComments:
      leadingDetachedComments:

  GoogleProtobufGeneratedCodeInfo:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo
    fields:
      annotation:
  GoogleProtobufGeneratedCodeInfoInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo
    fields:
      annotation:
  GoogleProtobufGeneratedCodeInfoPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo
    fields:
      annotation:

  GoogleProtobufGeneratedCodeInfoAnnotation:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo_Annotation
    fields:
      path:
      sourceFile:
      begin:
      end:
  GoogleProtobufAnnotationInput:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo_Annotation
    fields:
      path:
      sourceFile:
      begin:
      end:
  GoogleProtobufAnnotationPayload:
    model: github.com/golang/protobuf/protoc-gen-go/descriptor.GeneratedCodeInfo_Annotation
    fields:
      path:
      sourceFile:
      begin:
      end:



  GqlNode:
    model: berty.tech/core/api/protobuf/graphql.Node
    fields:
      id:
        resolver: true
  GqlNodeInput:
    model: berty.tech/core/api/protobuf/graphql.Node
    fields:
      id:
        resolver: true
  GqlNodePayload:
    model: berty.tech/core/api/protobuf/graphql.Node
    fields:
      id:
        resolver: true


  BertyNetworkMetricBandwidthStats:
    model: berty.tech/core/network/metric.BandwidthStats
    fields:
      id:
      totalIn:
      totalOut:
      rateIn:
      rateOut:
      type:
  BertyNetworkMetricBandwidthStatsInput:
    model: berty.tech/core/network/metric.BandwidthStats
    fields:
      id:
      totalIn:
      totalOut:
      rateIn:
      rateOut:
      type:
  BertyNetworkMetricBandwidthStatsPayload:
    model: berty.tech/core/network/metric.BandwidthStats
    fields:
      id:
      totalIn:
      totalOut:
      rateIn:
      rateOut:
      type:

  BertyNetworkMetricListAddrs:
    model: berty.tech/core/network/metric.ListAddrs
    fields:
      addrs:
  BertyNetworkMetricListAddrsInput:
    model: berty.tech/core/network/metric.ListAddrs
    fields:
      addrs:
  BertyNetworkMetricListAddrsPayload:
    model: berty.tech/core/network/metric.ListAddrs
    fields:
      addrs:

  BertyNetworkMetricPingReq:
    model: berty.tech/core/network/metric.PingReq
    fields:
      str:
  BertyNetworkMetricPingReqInput:
    model: berty.tech/core/network/metric.PingReq
    fields:
      str:
  BertyNetworkMetricPingReqPayload:
    model: berty.tech/core/network/metric.PingReq
    fields:
      str:


  BertyNodeNodeStartedAttrs:
    model: berty.tech/core/api/node.NodeStartedAttrs
    fields:
      t:
  BertyNodeNodeStartedAttrsInput:
    model: berty.tech/core/api/node.NodeStartedAttrs
    fields:
      t:
  BertyNodeNodeStartedAttrsPayload:
    model: berty.tech/core/api/node.NodeStartedAttrs
    fields:
      t:

  BertyNodeNodeStoppedAttrs:
    model: berty.tech/core/api/node.NodeStoppedAttrs
    fields:
      errMsg:
  BertyNodeNodeStoppedAttrsInput:
    model: berty.tech/core/api/node.NodeStoppedAttrs
    fields:
      errMsg:
  BertyNodeNodeStoppedAttrsPayload:
    model: berty.tech/core/api/node.NodeStoppedAttrs
    fields:
      errMsg:

  BertyNodeNodeIsAliveAttrs:
    model: berty.tech/core/api/node.NodeIsAliveAttrs
    fields:
      t:
  BertyNodeNodeIsAliveAttrsInput:
    model: berty.tech/core/api/node.NodeIsAliveAttrs
    fields:
      t:
  BertyNodeNodeIsAliveAttrsPayload:
    model: berty.tech/core/api/node.NodeIsAliveAttrs
    fields:
      t:

  BertyNodeBackgroundCriticalAttrs:
    model: berty.tech/core/api/node.BackgroundCriticalAttrs
    fields:
      errMsg:
  BertyNodeBackgroundCriticalAttrsInput:
    model: berty.tech/core/api/node.BackgroundCriticalAttrs
    fields:
      errMsg:
  BertyNodeBackgroundCriticalAttrsPayload:
    model: berty.tech/core/api/node.BackgroundCriticalAttrs
    fields:
      errMsg:

  BertyNodeBackgroundErrorAttrs:
    model: berty.tech/core/api/node.BackgroundErrorAttrs
    fields:
      errMsg:
  BertyNodeBackgroundErrorAttrsInput:
    model: berty.tech/core/api/node.BackgroundErrorAttrs
    fields:
      errMsg:
  BertyNodeBackgroundErrorAttrsPayload:
    model: berty.tech/core/api/node.BackgroundErrorAttrs
    fields:
      errMsg:

  BertyNodeBackgroundWarnAttrs:
    model: berty.tech/core/api/node.BackgroundWarnAttrs
    fields:
      errMsg:
  BertyNodeBackgroundWarnAttrsInput:
    model: berty.tech/core/api/node.BackgroundWarnAttrs
    fields:
      errMsg:
  BertyNodeBackgroundWarnAttrsPayload:
    model: berty.tech/core/api/node.BackgroundWarnAttrs
    fields:
      errMsg:

  BertyNodeDebugAttrs:
    model: berty.tech/core/api/node.DebugAttrs
    fields:
      msg:
  BertyNodeDebugAttrsInput:
    model: berty.tech/core/api/node.DebugAttrs
    fields:
      msg:
  BertyNodeDebugAttrsPayload:
    model: berty.tech/core/api/node.DebugAttrs
    fields:
      msg:

  BertyNodeStatisticsAttrs:
    model: berty.tech/core/api/node.StatisticsAttrs
    fields:
      errMsg:
      totalNetworkBandwidth:
      peersCount:
  BertyNodeStatisticsAttrsInput:
    model: berty.tech/core/api/node.StatisticsAttrs
    fields:
      errMsg:
      totalNetworkBandwidth:
      peersCount:
  BertyNodeStatisticsAttrsPayload:
    model: berty.tech/core/api/node.StatisticsAttrs
    fields:
      errMsg:
      totalNetworkBandwidth:
      peersCount:



  BertyEntityDevicePushIdentifier:
    model: berty.tech/core/entity.DevicePushIdentifier
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      pushInfo:
      relayPubkey:
      deviceId:
  BertyEntityDevicePushIdentifierInput:
    model: berty.tech/core/entity.DevicePushIdentifier
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      pushInfo:
      relayPubkey:
      deviceId:
  BertyEntityDevicePushIdentifierPayload:
    model: berty.tech/core/entity.DevicePushIdentifier
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      pushInfo:
      relayPubkey:
      deviceId:


  BertyEntityDevice:
    model: berty.tech/core/entity.Device
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      name:
      status:
      apiVersion:
      contactId:
      pushIdentifiers:
  BertyEntityDeviceInput:
    model: berty.tech/core/entity.Device
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      name:
      status:
      apiVersion:
      contactId:
      pushIdentifiers:
  BertyEntityDevicePayload:
    model: berty.tech/core/entity.Device
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      name:
      status:
      apiVersion:
      contactId:
      pushIdentifiers:



  BertyEntityContact:
    model: berty.tech/core/entity.Contact
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      sigchain:
      status:
      devices:
      displayName:
      displayStatus:
      overrideDisplayName:
      overrideDisplayStatus:
  BertyEntityContactInput:
    model: berty.tech/core/entity.Contact
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      sigchain:
      status:
      devices:
      displayName:
      displayStatus:
      overrideDisplayName:
      overrideDisplayStatus:
  BertyEntityContactPayload:
    model: berty.tech/core/entity.Contact
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      sigchain:
      status:
      devices:
      displayName:
      displayStatus:
      overrideDisplayName:
      overrideDisplayStatus:


  BertyEntityMessage:
    model: berty.tech/core/entity.Message
    fields:
      text:
  BertyEntityMessageInput:
    model: berty.tech/core/entity.Message
    fields:
      text:
  BertyEntityMessagePayload:
    model: berty.tech/core/entity.Message
    fields:
      text:


  BertyEntityErr:
    model: berty.tech/core/entity.Err
    fields:
      errMsg:
  BertyEntityErrInput:
    model: berty.tech/core/entity.Err
    fields:
      errMsg:
  BertyEntityErrPayload:
    model: berty.tech/core/entity.Err
    fields:
      errMsg:


  BertyEntityConversation:
    model: berty.tech/core/entity.Conversation
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      title:
      topic:
      infos:
      kind:
      members:
  BertyEntityConversationInput:
    model: berty.tech/core/entity.Conversation
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      title:
      topic:
      infos:
      kind:
      members:
  BertyEntityConversationPayload:
    model: berty.tech/core/entity.Conversation
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      title:
      topic:
      infos:
      kind:
      members:

  BertyEntityConversationMember:
    model: berty.tech/core/entity.ConversationMember
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      status:
      contact:
      conversationId:
        resolver: true
      contactId:
        resolver: true
  BertyEntityConversationMemberInput:
    model: berty.tech/core/entity.ConversationMember
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      status:
      contact:
      conversationId:
        resolver: true
      contactId:
        resolver: true
  BertyEntityConversationMemberPayload:
    model: berty.tech/core/entity.ConversationMember
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      readAt:
      wroteAt:
      status:
      contact:
      conversationId:
        resolver: true
      contactId:
        resolver: true


  BertyEntitySenderAlias:
    model: berty.tech/core/entity.SenderAlias
    fields:
      id:
      createdAt:
      updatedAt:
      status:
      originDeviceId:
      contactId:
      conversationId:
      aliasIdentifier:
      used:
  BertyEntitySenderAliasInput:
    model: berty.tech/core/entity.SenderAlias
    fields:
      id:
      createdAt:
      updatedAt:
      status:
      originDeviceId:
      contactId:
      conversationId:
      aliasIdentifier:
      used:
  BertyEntitySenderAliasPayload:
    model: berty.tech/core/entity.SenderAlias
    fields:
      id:
      createdAt:
      updatedAt:
      status:
      originDeviceId:
      contactId:
      conversationId:
      aliasIdentifier:
      used:


  BertyPushPushDestination:
    model: berty.tech/core/push.PushDestination
    fields:
      nonce:
      pushType:
      pushId:
  BertyPushPushDestinationInput:
    model: berty.tech/core/push.PushDestination
    fields:
      nonce:
      pushType:
      pushId:
  BertyPushPushDestinationPayload:
    model: berty.tech/core/push.PushDestination
    fields:
      nonce:
      pushType:
      pushId:

  BertyPushPushNativeIdentifier:
    model: berty.tech/core/push.PushNativeIdentifier
    fields:
      packageId:
      deviceToken:
  BertyPushPushNativeIdentifierInput:
    model: berty.tech/core/push.PushNativeIdentifier
    fields:
      packageId:
      deviceToken:
  BertyPushPushNativeIdentifierPayload:
    model: berty.tech/core/push.PushNativeIdentifier
    fields:
      packageId:
      deviceToken:

  BertyPushPushData:
    model: berty.tech/core/push.PushData
    fields:
      pushIdentifier:
      envelope:
      priority:
  BertyPushPushDataInput:
    model: berty.tech/core/push.PushData
    fields:
      pushIdentifier:
      envelope:
      priority:
  BertyPushPushDataPayload:
    model: berty.tech/core/push.PushData
    fields:
      pushIdentifier:
      envelope:
      priority:


  BertyEntitySentAttrs:
    model: berty.tech/core/entity.SentAttrs
    fields:
      ids:
  BertyEntitySentAttrsInput:
    model: berty.tech/core/entity.SentAttrs
    fields:
      ids:
  BertyEntitySentAttrsPayload:
    model: berty.tech/core/entity.SentAttrs
    fields:
      ids:

  BertyEntityAckAttrs:
    model: berty.tech/core/entity.AckAttrs
    fields:
      ids:
      errMsg:
  BertyEntityAckAttrsInput:
    model: berty.tech/core/entity.AckAttrs
    fields:
      ids:
      errMsg:
  BertyEntityAckAttrsPayload:
    model: berty.tech/core/entity.AckAttrs
    fields:
      ids:
      errMsg:

  BertyEntityPingAttrs:
    model: berty.tech/core/entity.PingAttrs
    fields:
      t:
  BertyEntityPingAttrsInput:
    model: berty.tech/core/entity.PingAttrs
    fields:
      t:
  BertyEntityPingAttrsPayload:
    model: berty.tech/core/entity.PingAttrs
    fields:
      t:

  BertyEntitySeenAttrs:
    model: berty.tech/core/entity.SeenAttrs
    fields:
      ids:
  BertyEntitySeenAttrsInput:
    model: berty.tech/core/entity.SeenAttrs
    fields:
      ids:
  BertyEntitySeenAttrsPayload:
    model: berty.tech/core/entity.SeenAttrs
    fields:
      ids:

  BertyEntityContactRequestAttrs:
    model: berty.tech/core/entity.ContactRequestAttrs
    fields:
      me:
      introText:
  BertyEntityContactRequestAttrsInput:
    model: berty.tech/core/entity.ContactRequestAttrs
    fields:
      me:
      introText:
  BertyEntityContactRequestAttrsPayload:
    model: berty.tech/core/entity.ContactRequestAttrs
    fields:
      me:
      introText:

  BertyEntityContactRequestAcceptedAttrs:
    model: berty.tech/core/entity.ContactRequestAcceptedAttrs
    fields:
      t:
  BertyEntityContactRequestAcceptedAttrsInput:
    model: berty.tech/core/entity.ContactRequestAcceptedAttrs
    fields:
      t:
  BertyEntityContactRequestAcceptedAttrsPayload:
    model: berty.tech/core/entity.ContactRequestAcceptedAttrs
    fields:
      t:

  BertyEntityContactShareMeAttrs:
    model: berty.tech/core/entity.ContactShareMeAttrs
    fields:
      me:
  BertyEntityContactShareMeAttrsInput:
    model: berty.tech/core/entity.ContactShareMeAttrs
    fields:
      me:
  BertyEntityContactShareMeAttrsPayload:
    model: berty.tech/core/entity.ContactShareMeAttrs
    fields:
      me:

  BertyEntityContactShareAttrs:
    model: berty.tech/core/entity.ContactShareAttrs
    fields:
      contact:
  BertyEntityContactShareAttrsInput:
    model: berty.tech/core/entity.ContactShareAttrs
    fields:
      contact:
  BertyEntityContactShareAttrsPayload:
    model: berty.tech/core/entity.ContactShareAttrs
    fields:
      contact:

  BertyEntityConversationInviteAttrs:
    model: berty.tech/core/entity.ConversationInviteAttrs
    fields:
      conversation:
  BertyEntityConversationInviteAttrsInput:
    model: berty.tech/core/entity.ConversationInviteAttrs
    fields:
      conversation:
  BertyEntityConversationInviteAttrsPayload:
    model: berty.tech/core/entity.ConversationInviteAttrs
    fields:
      conversation:

  BertyEntityConversationNewMessageAttrs:
    model: berty.tech/core/entity.ConversationNewMessageAttrs
    fields:
      message:
  BertyEntityConversationNewMessageAttrsInput:
    model: berty.tech/core/entity.ConversationNewMessageAttrs
    fields:
      message:
  BertyEntityConversationNewMessageAttrsPayload:
    model: berty.tech/core/entity.ConversationNewMessageAttrs
    fields:
      message:

  BertyEntityConversationReadAttrs:
    model: berty.tech/core/entity.ConversationReadAttrs
    fields:
      conversation:
  BertyEntityConversationReadAttrsInput:
    model: berty.tech/core/entity.ConversationReadAttrs
    fields:
      conversation:
  BertyEntityConversationReadAttrsPayload:
    model: berty.tech/core/entity.ConversationReadAttrs
    fields:
      conversation:

  BertyEntityConversationUpdateAttrs:
    model: berty.tech/core/entity.ConversationUpdateAttrs
    fields:
      conversation:
  BertyEntityConversationUpdateAttrsInput:
    model: berty.tech/core/entity.ConversationUpdateAttrs
    fields:
      conversation:
  BertyEntityConversationUpdateAttrsPayload:
    model: berty.tech/core/entity.ConversationUpdateAttrs
    fields:
      conversation:

  BertyEntityConversationMemberInviteAttrs:
    model: berty.tech/core/entity.ConversationMemberInviteAttrs
    fields:
      id:
      contact:
      conversation:
  BertyEntityConversationMemberInviteAttrsInput:
    model: berty.tech/core/entity.ConversationMemberInviteAttrs
    fields:
      id:
      contact:
      conversation:
  BertyEntityConversationMemberInviteAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberInviteAttrs
    fields:
      id:
      contact:
      conversation:

  BertyEntityConversationMemberLeaveAttrs:
    model: berty.tech/core/entity.ConversationMemberLeaveAttrs
    fields:
      id:
  BertyEntityConversationMemberLeaveAttrsInput:
    model: berty.tech/core/entity.ConversationMemberLeaveAttrs
    fields:
      id:
  BertyEntityConversationMemberLeaveAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberLeaveAttrs
    fields:
      id:

  BertyEntityConversationMemberSetTitleAttrs:
    model: berty.tech/core/entity.ConversationMemberSetTitleAttrs
    fields:
      id:
      title:
  BertyEntityConversationMemberSetTitleAttrsInput:
    model: berty.tech/core/entity.ConversationMemberSetTitleAttrs
    fields:
      id:
      title:
  BertyEntityConversationMemberSetTitleAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberSetTitleAttrs
    fields:
      id:
      title:

  BertyEntityConversationMemberSetTopicAttrs:
    model: berty.tech/core/entity.ConversationMemberSetTopicAttrs
    fields:
      id:
      topic:
  BertyEntityConversationMemberSetTopicAttrsInput:
    model: berty.tech/core/entity.ConversationMemberSetTopicAttrs
    fields:
      id:
      topic:
  BertyEntityConversationMemberSetTopicAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberSetTopicAttrs
    fields:
      id:
      topic:

  BertyEntityConversationMemberSetOwnerAttrs:
    model: berty.tech/core/entity.ConversationMemberSetOwnerAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberSetOwnerAttrsInput:
    model: berty.tech/core/entity.ConversationMemberSetOwnerAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberSetOwnerAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberSetOwnerAttrs
    fields:
      id:
      contactId:

  BertyEntityConversationMemberBlockAttrs:
    model: berty.tech/core/entity.ConversationMemberBlockAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberBlockAttrsInput:
    model: berty.tech/core/entity.ConversationMemberBlockAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberBlockAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberBlockAttrs
    fields:
      id:
      contactId:

  BertyEntityConversationMemberUnblockAttrs:
    model: berty.tech/core/entity.ConversationMemberUnblockAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberUnblockAttrsInput:
    model: berty.tech/core/entity.ConversationMemberUnblockAttrs
    fields:
      id:
      contactId:
  BertyEntityConversationMemberUnblockAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberUnblockAttrs
    fields:
      id:
      contactId:

  BertyEntityConversationMemberReadAttrs:
    model: berty.tech/core/entity.ConversationMemberReadAttrs
    fields:
      id:
      at:
  BertyEntityConversationMemberReadAttrsInput:
    model: berty.tech/core/entity.ConversationMemberReadAttrs
    fields:
      id:
      at:
  BertyEntityConversationMemberReadAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberReadAttrs
    fields:
      id:
      at:

  BertyEntityConversationMemberWriteAttrs:
    model: berty.tech/core/entity.ConversationMemberWriteAttrs
    fields:
      id:
      message:
  BertyEntityConversationMemberWriteAttrsInput:
    model: berty.tech/core/entity.ConversationMemberWriteAttrs
    fields:
      id:
      message:
  BertyEntityConversationMemberWriteAttrsPayload:
    model: berty.tech/core/entity.ConversationMemberWriteAttrs
    fields:
      id:
      message:

  BertyEntityDevtoolsMapsetAttrs:
    model: berty.tech/core/entity.DevtoolsMapsetAttrs
    fields:
      key:
      val:
  BertyEntityDevtoolsMapsetAttrsInput:
    model: berty.tech/core/entity.DevtoolsMapsetAttrs
    fields:
      key:
      val:
  BertyEntityDevtoolsMapsetAttrsPayload:
    model: berty.tech/core/entity.DevtoolsMapsetAttrs
    fields:
      key:
      val:

  BertyEntitySenderAliasUpdateAttrs:
    model: berty.tech/core/entity.SenderAliasUpdateAttrs
    fields:
      aliases:
  BertyEntitySenderAliasUpdateAttrsInput:
    model: berty.tech/core/entity.SenderAliasUpdateAttrs
    fields:
      aliases:
  BertyEntitySenderAliasUpdateAttrsPayload:
    model: berty.tech/core/entity.SenderAliasUpdateAttrs
    fields:
      aliases:

  BertyEntityDeviceUpdatePushConfigAttrs:
    model: berty.tech/core/entity.DeviceUpdatePushConfigAttrs
    fields:
      device:
  BertyEntityDeviceUpdatePushConfigAttrsInput:
    model: berty.tech/core/entity.DeviceUpdatePushConfigAttrs
    fields:
      device:
  BertyEntityDeviceUpdatePushConfigAttrsPayload:
    model: berty.tech/core/entity.DeviceUpdatePushConfigAttrs
    fields:
      device:

  BertyEntityDevicePushToAttrs:
    model: berty.tech/core/entity.DevicePushToAttrs
    fields:
      pushIdentifier:
      envelope:
      priority:
  BertyEntityDevicePushToAttrsInput:
    model: berty.tech/core/entity.DevicePushToAttrs
    fields:
      pushIdentifier:
      envelope:
      priority:
  BertyEntityDevicePushToAttrsPayload:
    model: berty.tech/core/entity.DevicePushToAttrs
    fields:
      pushIdentifier:
      envelope:
      priority:

  BertyEntityNodeAttrs:
    model: berty.tech/core/entity.NodeAttrs
    fields:
      kind:
      attributes:
  BertyEntityNodeAttrsInput:
    model: berty.tech/core/entity.NodeAttrs
    fields:
      kind:
      attributes:
  BertyEntityNodeAttrsPayload:
    model: berty.tech/core/entity.NodeAttrs
    fields:
      kind:
      attributes:


  GoogleProtobufAny:
    model: github.com/golang/protobuf/ptypes/any.Any
    fields:
      typeUrl:
      value:
  GoogleProtobufAnyInput:
    model: github.com/golang/protobuf/ptypes/any.Any
    fields:
      typeUrl:
      value:
  GoogleProtobufAnyPayload:
    model: github.com/golang/protobuf/ptypes/any.Any
    fields:
      typeUrl:
      value:


  BertyEntityEvent:
    model: berty.tech/core/entity.Event
    fields:
      id:
        resolver: true
      sourceDeviceId:
      createdAt:
      updatedAt:
      sentAt:
      receivedAt:
      ackedAt:
      direction:
      apiVersion:
      kind:
      attributes:
        resolver: true
      seenAt:
      ackStatus:
      dispatches:
      sourceContactId:
      targetType:
      targetAddr:
        resolver: true
      errProxy:
      metadata:
  BertyEntityEventInput:
    model: berty.tech/core/entity.Event
    fields:
      id:
        resolver: true
      sourceDeviceId:
      createdAt:
      updatedAt:
      sentAt:
      receivedAt:
      ackedAt:
      direction:
      apiVersion:
      kind:
      attributes:
        resolver: true
      seenAt:
      ackStatus:
      dispatches:
      sourceContactId:
      targetType:
      targetAddr:
        resolver: true
      errProxy:
      metadata:
  BertyEntityEventPayload:
    model: berty.tech/core/entity.Event
    fields:
      id:
        resolver: true
      sourceDeviceId:
      createdAt:
      updatedAt:
      sentAt:
      receivedAt:
      ackedAt:
      direction:
      apiVersion:
      kind:
      attributes:
        resolver: true
      seenAt:
      ackStatus:
      dispatches:
      sourceContactId:
      targetType:
      targetAddr:
        resolver: true
      errProxy:
      metadata:

  BertyEntityEventDispatch:
    model: berty.tech/core/entity.EventDispatch
    fields:
      eventId:
      deviceId:
      contactId:
      sentAt:
      ackedAt:
      seenAt:
      ackMedium:
      seenMedium:
      retryBackoff:
  BertyEntityEventDispatchInput:
    model: berty.tech/core/entity.EventDispatch
    fields:
      eventId:
      deviceId:
      contactId:
      sentAt:
      ackedAt:
      seenAt:
      ackMedium:
      seenMedium:
      retryBackoff:
  BertyEntityEventDispatchPayload:
    model: berty.tech/core/entity.EventDispatch
    fields:
      eventId:
      deviceId:
      contactId:
      sentAt:
      ackedAt:
      seenAt:
      ackMedium:
      seenMedium:
      retryBackoff:

  BertyEntityMetadataKeyValue:
    model: berty.tech/core/entity.MetadataKeyValue
    fields:
      key:
      values:
  BertyEntityMetadataKeyValueInput:
    model: berty.tech/core/entity.MetadataKeyValue
    fields:
      key:
      values:
  BertyEntityMetadataKeyValuePayload:
    model: berty.tech/core/entity.MetadataKeyValue
    fields:
      key:
      values:


  BertyEntityConfig:
    model: berty.tech/core/entity.Config
    fields:
      id:
      createdAt:
      updatedAt:
      myself:
      myselfId:
      currentDevice:
      currentDeviceId:
      cryptoParams:
      pushRelayPubkeyApns:
      pushRelayPubkeyFcm:
      notificationsEnabled:
      notificationsPreviews:
      debugNotificationVerbosity:
  BertyEntityConfigInput:
    model: berty.tech/core/entity.Config
    fields:
      id:
      createdAt:
      updatedAt:
      myself:
      myselfId:
      currentDevice:
      currentDeviceId:
      cryptoParams:
      pushRelayPubkeyApns:
      pushRelayPubkeyFcm:
      notificationsEnabled:
      notificationsPreviews:
      debugNotificationVerbosity:
  BertyEntityConfigPayload:
    model: berty.tech/core/entity.Config
    fields:
      id:
      createdAt:
      updatedAt:
      myself:
      myselfId:
      currentDevice:
      currentDeviceId:
      cryptoParams:
      pushRelayPubkeyApns:
      pushRelayPubkeyFcm:
      notificationsEnabled:
      notificationsPreviews:
      debugNotificationVerbosity:


  BertyEntityDevicePushConfig:
    model: berty.tech/core/entity.DevicePushConfig
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      deviceId:
      pushType:
      pushId:
      relayPubkey:
  BertyEntityDevicePushConfigInput:
    model: berty.tech/core/entity.DevicePushConfig
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      deviceId:
      pushType:
      pushId:
      relayPubkey:
  BertyEntityDevicePushConfigPayload:
    model: berty.tech/core/entity.DevicePushConfig
    fields:
      id:
        resolver: true
      createdAt:
      updatedAt:
      deviceId:
      pushType:
      pushId:
      relayPubkey:


  BertyNetworkMetricPeer:
    model: berty.tech/core/network/metric.Peer
    fields:
      id:
      addrs:
      connection:
  BertyNetworkMetricPeerInput:
    model: berty.tech/core/network/metric.Peer
    fields:
      id:
      addrs:
      connection:
  BertyNetworkMetricPeerPayload:
    model: berty.tech/core/network/metric.Peer
    fields:
      id:
      addrs:
      connection:

  BertyNetworkMetricPeers:
    model: berty.tech/core/network/metric.Peers
    fields:
      list:
  BertyNetworkMetricPeersInput:
    model: berty.tech/core/network/metric.Peers
    fields:
      list:
  BertyNetworkMetricPeersPayload:
    model: berty.tech/core/network/metric.Peers
    fields:
      list:


  BertyPkgDeviceinfoDeviceInfos:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfos
    fields:
      infos:
  BertyPkgDeviceinfoDeviceInfosInput:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfos
    fields:
      infos:
  BertyPkgDeviceinfoDeviceInfosPayload:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfos
    fields:
      infos:

  BertyPkgDeviceinfoDeviceInfo:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfo
    fields:
      key:
      value:
      category:
      link:
      type:
      errMsg:
      weight:
  BertyPkgDeviceinfoDeviceInfoInput:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfo
    fields:
      key:
      value:
      category:
      link:
      type:
      errMsg:
      weight:
  BertyPkgDeviceinfoDeviceInfoPayload:
    model: berty.tech/core/pkg/deviceinfo.DeviceInfo
    fields:
      key:
      value:
      category:
      link:
      type:
      errMsg:
      weight:


  BertyNodeTestErrorInput:
    model: berty.tech/core/api/node.TestErrorInput
    fields:
      kind:
  BertyNodeTestErrorInputPayload:
    model: berty.tech/core/api/node.TestErrorInput
    fields:
      kind:

  BertyNodeProtocolsOutput:
    model: berty.tech/core/api/node.ProtocolsOutput
    fields:
      protocols:
  BertyNodeProtocolsOutputInput:
    model: berty.tech/core/api/node.ProtocolsOutput
    fields:
      protocols:
  BertyNodeProtocolsPayload:
    model: berty.tech/core/api/node.ProtocolsOutput
    fields:
      protocols:

  BertyNodeAppVersionOutput:
    model: berty.tech/core/api/node.AppVersionOutput
    fields:
      version:
  BertyNodeAppVersionOutputInput:
    model: berty.tech/core/api/node.AppVersionOutput
    fields:
      version:
  BertyNodeAppVersionPayload:
    model: berty.tech/core/api/node.AppVersionOutput
    fields:
      version:

  BertyNodePingDestination:
    model: berty.tech/core/api/node.PingDestination
    fields:
      destination:
  BertyNodePingDestinationInput:
    model: berty.tech/core/api/node.PingDestination
    fields:
      destination:
  BertyNodePingDestinationPayload:
    model: berty.tech/core/api/node.PingDestination
    fields:
      destination:

  BertyNodeContactRequestInput:
    model: berty.tech/core/api/node.ContactRequestInput
    fields:
      contactId:
        resolver: true
      contactOverrideDisplayName:
      introText:
  BertyNodeContactRequestInputPayload:
    model: berty.tech/core/api/node.ContactRequestInput
    fields:
      contactId:
        resolver: true
      contactOverrideDisplayName:
      introText:

  BertyNodeContactAcceptRequestInput:
    model: berty.tech/core/api/node.ContactAcceptRequestInput
    fields:
      contactId:
        resolver: true
  BertyNodeContactAcceptRequestInputPayload:
    model: berty.tech/core/api/node.ContactAcceptRequestInput
    fields:
      contactId:
        resolver: true

  BertyNodeConversationAddMessageInput:
    model: berty.tech/core/api/node.ConversationAddMessageInput
    fields:
      conversation:
      message:
  BertyNodeConversationAddMessageInputPayload:
    model: berty.tech/core/api/node.ConversationAddMessageInput
    fields:
      conversation:
      message:

  BertyNodeEventStreamInput:
    model: berty.tech/core/api/node.EventStreamInput
    fields:
      filter:
  BertyNodeEventStreamInputPayload:
    model: berty.tech/core/api/node.EventStreamInput
    fields:
      filter:

  BertyNodeCommitLog:
    model: berty.tech/core/api/node.CommitLog
    fields:
      operation:
      entity:
  BertyNodeCommitLogInput:
    model: berty.tech/core/api/node.CommitLog
    fields:
      operation:
      entity:
  BertyNodeCommitLogPayload:
    model: berty.tech/core/api/node.CommitLog
    fields:
      operation:
      entity:

  BertyNodeCommitLogEntity:
    model: berty.tech/core/api/node.CommitLog_Entity
    fields:
      config:
      contact:
      device:
      conversation:
      conversationMember:
      event:
      devicePushConfig:
      devicePushIdentifier:
      eventDispatch:
      senderAlias:
  BertyNodeEntityInput:
    model: berty.tech/core/api/node.CommitLog_Entity
    fields:
      config:
      contact:
      device:
      conversation:
      conversationMember:
      event:
      devicePushConfig:
      devicePushIdentifier:
      eventDispatch:
      senderAlias:
  BertyNodeEntityPayload:
    model: berty.tech/core/api/node.CommitLog_Entity
    fields:
      config:
      contact:
      device:
      conversation:
      conversationMember:
      event:
      devicePushConfig:
      devicePushIdentifier:
      eventDispatch:
      senderAlias:

  BertyNodeEventListInput:
    model: berty.tech/core/api/node.EventListInput
    fields:
      filter:
      onlyWithoutAckedAt:
      onlyWithoutSeenAt:
      paginate:
  BertyNodeEventListInputPayload:
    model: berty.tech/core/api/node.EventListInput
    fields:
      filter:
      onlyWithoutAckedAt:
      onlyWithoutSeenAt:
      paginate:

  BertyNodeEventEdge:
    model: berty.tech/core/api/node.EventEdge
    fields:
      node:
      cursor:
  BertyNodeEventEdgeInput:
    model: berty.tech/core/api/node.EventEdge
    fields:
      node:
      cursor:
  BertyNodeEventEdgePayload:
    model: berty.tech/core/api/node.EventEdge
    fields:
      node:
      cursor:

  BertyNodeEventListConnection:
    model: berty.tech/core/api/node.EventListConnection
    fields:
      edges:
      pageInfo:
  BertyNodeEventListConnectionInput:
    model: berty.tech/core/api/node.EventListConnection
    fields:
      edges:
      pageInfo:

  BertyNodeContactListInput:
    model: berty.tech/core/api/node.ContactListInput
    fields:
      filter:
      paginate:
  BertyNodeContactListInputPayload:
    model: berty.tech/core/api/node.ContactListInput
    fields:
      filter:
      paginate:

  BertyNodeContactEdge:
    model: berty.tech/core/api/node.ContactEdge
    fields:
      node:
      cursor:
  BertyNodeContactEdgeInput:
    model: berty.tech/core/api/node.ContactEdge
    fields:
      node:
      cursor:
  BertyNodeContactEdgePayload:
    model: berty.tech/core/api/node.ContactEdge
    fields:
      node:
      cursor:

  BertyNodeContactListConnection:
    model: berty.tech/core/api/node.ContactListConnection
    fields:
      edges:
      pageInfo:
  BertyNodeContactListConnectionInput:
    model: berty.tech/core/api/node.ContactListConnection
    fields:
      edges:
      pageInfo:

  BertyNodeContactInput:
    model: berty.tech/core/api/node.ContactInput
    fields:
      filter:
  BertyNodeContactInputPayload:
    model: berty.tech/core/api/node.ContactInput
    fields:
      filter:

  BertyNodeConversationListInput:
    model: berty.tech/core/api/node.ConversationListInput
    fields:
      filter:
      paginate:
  BertyNodeConversationListInputPayload:
    model: berty.tech/core/api/node.ConversationListInput
    fields:
      filter:
      paginate:

  BertyNodeConversationEdge:
    model: berty.tech/core/api/node.ConversationEdge
    fields:
      node:
      cursor:
  BertyNodeConversationEdgeInput:
    model: berty.tech/core/api/node.ConversationEdge
    fields:
      node:
      cursor:
  BertyNodeConversationEdgePayload:
    model: berty.tech/core/api/node.ConversationEdge
    fields:
      node:
      cursor:

  BertyNodeConversationListConnection:
    model: berty.tech/core/api/node.ConversationListConnection
    fields:
      edges:
      pageInfo:
  BertyNodeConversationListConnectionInput:
    model: berty.tech/core/api/node.ConversationListConnection
    fields:
      edges:
      pageInfo:

  BertyNodeConversationCreateInput:
    model: berty.tech/core/api/node.ConversationCreateInput
    fields:
      contacts:
      title:
      topic:
      kind:
  BertyNodeConversationCreateInputPayload:
    model: berty.tech/core/api/node.ConversationCreateInput
    fields:
      contacts:
      title:
      topic:
      kind:

  BertyNodeConversationManageMembersInput:
    model: berty.tech/core/api/node.ConversationManageMembersInput
    fields:
      conversation:
      contacts:
  BertyNodeConversationManageMembersInputPayload:
    model: berty.tech/core/api/node.ConversationManageMembersInput
    fields:
      conversation:
      contacts:

  BertyNodeDevicePushConfigEdge:
    model: berty.tech/core/api/node.DevicePushConfigEdge
    fields:
      node:
      cursor:
  BertyNodeDevicePushConfigEdgeInput:
    model: berty.tech/core/api/node.DevicePushConfigEdge
    fields:
      node:
      cursor:
  BertyNodeDevicePushConfigEdgePayload:
    model: berty.tech/core/api/node.DevicePushConfigEdge
    fields:
      node:
      cursor:

  BertyNodeDevicePushConfigListOutput:
    model: berty.tech/core/api/node.DevicePushConfigListOutput
    fields:
      edges:
  BertyNodeDevicePushConfigListOutputInput:
    model: berty.tech/core/api/node.DevicePushConfigListOutput
    fields:
      edges:
  BertyNodeDevicePushConfigListPayload:
    model: berty.tech/core/api/node.DevicePushConfigListOutput
    fields:
      edges:

  BertyNodeDevicePushConfigCreateInput:
    model: berty.tech/core/api/node.DevicePushConfigCreateInput
    fields:
      relayPubkey:
      pushId:
      pushType:
  BertyNodeDevicePushConfigCreateInputPayload:
    model: berty.tech/core/api/node.DevicePushConfigCreateInput
    fields:
      relayPubkey:
      pushId:
      pushType:

  BertyNodePagination:
    model: berty.tech/core/api/node.Pagination
    fields:
      orderBy:
      orderDesc:
      first:
      after:
      last:
      before:
  BertyNodePaginationInput:
    model: berty.tech/core/api/node.Pagination
    fields:
      orderBy:
      orderDesc:
      first:
      after:
      last:
      before:
  BertyNodePaginationPayload:
    model: berty.tech/core/api/node.Pagination
    fields:
      orderBy:
      orderDesc:
      first:
      after:
      last:
      before:

  BertyNodePageInfo:
    model: berty.tech/core/api/node.PageInfo
    fields:
      startCursor:
      endCursor:
      hasNextPage:
      hasPreviousPage:
      count:
  BertyNodePageInfoInput:
    model: berty.tech/core/api/node.PageInfo
    fields:
      startCursor:
      endCursor:
      hasNextPage:
      hasPreviousPage:
      count:
  BertyNodePageInfoPayload:
    model: berty.tech/core/api/node.PageInfo
    fields:
      startCursor:
      endCursor:
      hasNextPage:
      hasPreviousPage:
      count:

  BertyNodeIntegrationTestInput:
    model: berty.tech/core/api/node.IntegrationTestInput
    fields:
      name:
  BertyNodeIntegrationTestInputPayload:
    model: berty.tech/core/api/node.IntegrationTestInput
    fields:
      name:

  BertyNodeIntegrationTestOutput:
    model: berty.tech/core/api/node.IntegrationTestOutput
    fields:
      name:
      success:
      verbose:
      startedAt:
      finishedAt:
  BertyNodeIntegrationTestOutputInput:
    model: berty.tech/core/api/node.IntegrationTestOutput
    fields:
      name:
      success:
      verbose:
      startedAt:
      finishedAt:
  BertyNodeIntegrationTestPayload:
    model: berty.tech/core/api/node.IntegrationTestOutput
    fields:
      name:
      success:
      verbose:
      startedAt:
      finishedAt:

  BertyNodeVoid:
    model: berty.tech/core/api/node.Void
    fields:
      t:
  BertyNodeVoidInput:
    model: berty.tech/core/api/node.Void
    fields:
      t:
  BertyNodeVoidPayload:
    model: berty.tech/core/api/node.Void
    fields:
      t:

  BertyNodeBool:
    model: berty.tech/core/api/node.Bool
    fields:
      ret:
  BertyNodeBoolInput:
    model: berty.tech/core/api/node.Bool
    fields:
      ret:
  BertyNodeBoolPayload:
    model: berty.tech/core/api/node.Bool
    fields:
      ret:

  BertyNodeEventIDInput:
    model: berty.tech/core/api/node.EventIDInput
    fields:
      eventId:
        resolver: true
  BertyNodeEventIDInputPayload:
    model: berty.tech/core/api/node.EventIDInput
    fields:
      eventId:
        resolver: true

  BertyNodeLogStreamInput:
    model: berty.tech/core/api/node.LogStreamInput
    fields:
      continues:
      logLevel:
      namespaces:
      last:
  BertyNodeLogStreamInputPayload:
    model: berty.tech/core/api/node.LogStreamInput
    fields:
      continues:
      logLevel:
      namespaces:
      last:

  BertyNodeLogEntry:
    model: berty.tech/core/api/node.LogEntry
    fields:
      line:
  BertyNodeLogEntryInput:
    model: berty.tech/core/api/node.LogEntry
    fields:
      line:
  BertyNodeLogEntryPayload:
    model: berty.tech/core/api/node.LogEntry
    fields:
      line:

  BertyNodeLogfileEntry:
    model: berty.tech/core/api/node.LogfileEntry
    fields:
      path:
      filesize:
      createdAt:
      updatedAt:
  BertyNodeLogfileEntryInput:
    model: berty.tech/core/api/node.LogfileEntry
    fields:
      path:
      filesize:
      createdAt:
      updatedAt:
  BertyNodeLogfileEntryPayload:
    model: berty.tech/core/api/node.LogfileEntry
    fields:
      path:
      filesize:
      createdAt:
      updatedAt:

  BertyNodeLogfileReadInput:
    model: berty.tech/core/api/node.LogfileReadInput
    fields:
      path:
  BertyNodeLogfileReadInputPayload:
    model: berty.tech/core/api/node.LogfileReadInput
    fields:
      path:

  BertyNodeNodeEvent:
    model: berty.tech/core/api/node.NodeEvent
    fields:
      kind:
      attributes:
  BertyNodeNodeEventInput:
    model: berty.tech/core/api/node.NodeEvent
    fields:
      kind:
      attributes:
  BertyNodeNodeEventPayload:
    model: berty.tech/core/api/node.NodeEvent
    fields:
      kind:
      attributes:
