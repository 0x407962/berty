{{- if not (getStore "service.gen.graphql.header") -}}
# GENERATED CODE -- DO NOT EDIT!

scalar Enum
scalar Double
scalar Int64
scalar Uint64
scalar Int32
scalar Byte
scalar Fixed64
scalar Fixed32
scalar Bool
scalar Uint32
scalar Sfixed64
scalar Sfixed32
scalar Sint32
scalar Sint64
scalar GoogleProtobufTimestamp
scalar GoogleProtobufTimestampInput
scalar GoogleProtobufTimestampPayload

interface Node {
  id: ID!
}
{{setStore "service.gen.graphql.header" true}}
{{- end}}

{{- setStore "file" .File}}
{{- $file := getStore "file"}}

{{- range .File.MessageType }}
  {{- setStore (concat "." $file.Package "." .Name) .}}
{{- end}}

{{- range .File.EnumType}}
  {{/* - template "Enum" . */}}
{{- end}}
{{- range .File.MessageType}}
  {{- if .EnumType}}
    {{- setStore "message_name" .Name}}
    {{- range .EnumType}}
      {{/* - template "Enum" . */}}
    {{- end}}
  {{- end}}
  {{- if .NestedType}}
    {{ setStore "message_name" .Name}}
    {{- range .NestedType}}
      {{- template "Type" .}}
    {{- end}}
  {{- end}}
  {{- setStore "message_name" ""}}
  {{- template "Type" .}}
{{- end}}

{{- define "ImplementNode"}}
  {{- setStore "implement_node" false}}
  {{- range .Field}}
    {{- if (boolFieldExtension 53004 .)}}
      {{- setStore "implement_node" true}}
    {{- end}}
  {{- end}}
  {{- if (getStore "implement_node") -}}
    implements Node
  {{- end}}
{{- end}}

{{- define "MessageField"}}
  {{- $type := getStore .TypeName}}
  {{- $typeName := .TypeName | replace "." "_" | camelCase | replace "_" ""}}

  {{- if (boolFieldExtension 53006 .)}}
    {{- template "Fields" $type.Field}}
  {{- else}}

    {{- if eq (boolFieldExtension 53009 .) true}}
    {{.JsonName}}: {{if isFieldRepeated .}}[{{$typeName}}!]{{else}}{{$typeName}}!{{end}}
    {{- else}}
    {{.JsonName}}: {{if isFieldRepeated .}}[{{$typeName}}]{{else}}{{$typeName}}{{end}}
    {{- end}}
  {{- end}}
{{- end}}

{{- define "InputMessageField"}}
  {{- $type := getStore .TypeName}}
  {{- $typeName := .TypeName}}

  {{- if (boolFieldExtension 53006 .)}}
    {{- template "InputFields" $type.Field}}
  {{- else}}

    {{- if eq (boolFieldExtension 53009 .) true}}
    {{.JsonName}}: {{if isFieldRepeated .}}[{{template "InputName" $typeName}}!]{{else}}{{template "InputName" $typeName}}!{{end}}
    {{- else}}
    {{.JsonName}}: {{if isFieldRepeated .}}[{{template "InputName" $typeName}}]{{else}}{{template "InputName" $typeName}}{{end}}
    {{- end}}
  {{- end}}
{{- end}}

{{- define "ScalarField"}}
  {{- if (boolFieldExtension 53004 .)}}
    {{.JsonName}}: ID!
  {{- else}}
    {{- $typeName := .Type | string | replace "TYPE_" "" | lower | camelCase}}
    {{- $isFieldRepeated := isFieldRepeated .}}
    {{- $isFieldNullable := boolFieldExtension 53008 .}}
    {{- if eq (.Type | string) "TYPE_BYTES"}}
      {{- $typeName = "Byte"}}
      {{- $isFieldRepeated = true}}
      {{- $isFieldNullable = true}}
    {{- end}}
    {{- if $isFieldNullable}}
    {{.JsonName}}: {{if $isFieldRepeated}}[{{$typeName}}!]{{else}}{{$typeName}}{{end}}
    {{- else}}
    {{.JsonName}}: {{if $isFieldRepeated}}[{{$typeName}}!]{{else}}{{$typeName}}!{{end}}
    {{- end}}
  {{- end}}
{{- end}}

{{- define "EnumField"}}
  {{- $typeName := .TypeName | replace "." "_" | camelCase | replace "_" ""}}
    {{.JsonName}}: {{if isFieldRepeated .}}[Enum]{{else}}Enum{{end}}
{{- end}}

{{- define "Field"}}
  {{- if (eq (.Type | string) "TYPE_MESSAGE")}}
    {{- template "MessageField" .}}
  {{- else if (eq (.Type | string) "TYPE_ENUM")}}
    {{- template "EnumField" .}}
  {{- else}}
    {{- template "ScalarField" .}}
  {{- end}}
{{- end}}

{{- define "InputField"}}
  {{- if (eq (.Type | string) "TYPE_MESSAGE")}}
    {{- template "InputMessageField" .}}
  {{- else if (eq (.Type | string) "TYPE_ENUM")}}
    {{- template "EnumField" .}}
  {{- else }}
    {{- template "ScalarField" .}}
  {{- end}}
{{- end}}

{{- define "Fields"}}
  {{- $messageName := getStore "message_name"}}
  {{- if .}}
    {{- range .}}
      {{- template "Field" .}}
    {{- end}}
  {{- else}}
    T: Boolean
  {{- end}}
{{- end}}

{{- define "InputFields"}}
  {{- if .}}
    {{- range .}}
      {{- template "InputField" .}}
    {{- end}}
  {{- else}}
    T: Boolean
  {{- end}}
{{- end}}

{{- define "Enum"}}
  {{- $file := getStore "file"}}
  {{- $messageName := getStore "message_name"}}

enum {{$file.Package | replace "." "_" | camelCase}}{{$messageName}}{{.Name}} {
  {{- range .Value}}
  {{.Name}}
  {{- end}}
}
{{- end}}

{{- define "Type"}}
  {{- $file := getStore "file"}}
  {{- $messageName := getStore "message_name"}}
  {{- if eq (concat .Name "") "Timestamp"}}
  {{- else if (eq (.Name | regexMatch ".*Input") false) }}
type {{$file.Package | replace "." "_" | camelCase}}{{$messageName}}{{.Name}} {{template "ImplementNode" .}} {
  {{- template "Fields" .Field}}
}
  {{- end}}
{{- end}}

{{- define "Input"}}
  {{- $type := getStore .}}
  {{- if $type}}
    {{- if eq (concat $type.Name "") "Timestamp"}}
    {{- else}}
input {{template "InputName" .}} {
    {{- template "InputFields" $type.Field}}
}
    {{- end}}
  {{- end}}
{{- end}}

{{- define "InputName" }}
  {{- $type := getStore .}}
  {{- if $type}}
    {{- $typeName := . | replace "." "_" | camelCase | replace "_" ""}}
    {{- if $typeName | regexMatch ".*Input"}}
      {{- $typeName}}
    {{- else}}
      {{- $typeName}}Input
    {{- end}}
  {{- end}}
{{- end}}

{{- define "PayloadName" }}
  {{- $type := getStore .}}
  {{- if $type}}
    {{- $typeName := . | replace "." "_" | camelCase | replace "_" ""}}
    {{- $typeName}}
  {{- end}}
{{- end}}

{{- define "RecursiveInput"}}
  {{- $type := getStore .}}
  {{- if $type}}
    {{- range $type.Field}}
      {{- $typeName := .TypeName}}
      {{- if $typeName}}
        {{- $type := getStore $typeName}}
        {{- $alreadyDefinedKey := concat $typeName ".InputAlreadyDefined"}}
        {{- $alreadyDefined := getStore $alreadyDefinedKey}}
        {{- if $alreadyDefined}}
        {{- else}}
          {{- template "RecursiveInput" $typeName}}
          {{- template "Input" $typeName}}
        {{- end}}
        {{- setStore $alreadyDefinedKey true}}
      {{- end}}
    {{- end}}
  {{- end}}
{{- end}}

{{- block "ServiceInputs" .File.Service}}
  {{- $file := getStore "file"}}
  {{- range .}}
    {{- range .Method}}
      {{- $methodName := .Name}}
      {{- if .InputType}}
        {{- template "RecursiveInput" .InputType}}
      {{- end}}
    {{- end}}
  {{- end}}
{{- end}}

{{- define "Method"}}
  {{.Name}}
  {{- if .InputType -}}
  (
    {{- $inputType := .InputType}}
    {{- if (stringMethodOptionsExtension 53010 .)}}
      {{- $inputType = stringMethodOptionsExtension 53010 .}}
    {{- end}}
    {{- template "InputFields" (getStore $inputType).Field}}
  )
  {{- end}}
  {{- if (stringMethodOptionsExtension 53007 .) -}}
      : {{template "PayloadName" (stringMethodOptionsExtension 53007 .)}}
  {{- else if .OutputType}}
    {{- if (and (.ServerStreaming) (not (eq (stringMethodOptionsExtension 53002 . | lower) "subscription")))}}
      : [{{template "PayloadName" .OutputType}}]
    {{- else -}}
      : {{template "PayloadName" .OutputType}}
    {{- end}}
  {{- end}}
{{- end}}

{{- block "Query" .File.Service}}
  {{$file := getStore "file"}}

  {{- range .}}
type Query {
  node(id: ID!): Node
    {{- range .Method}}
      {{- if eq (stringMethodOptionsExtension 53002 . | lower) "query"}}
        {{- template "Method" .}}
      {{- end}}
    {{- end}}
}
  {{- end}}
{{- end}}

{{- block "Mutation" .File.Service}}
  {{$file := getStore "file"}}

  {{- range .}}
type Mutation {
    {{- range .Method}}
      {{- if eq (stringMethodOptionsExtension 53002 . | lower) "mutation"}}
        {{- template "Method" .}}
      {{- end}}
    {{- end}}
}
  {{- end}}
{{- end}}

{{- block "Subscription" .File.Service}}
  {{$file := getStore "file"}}

  {{- range .}}
type Subscription {
    {{- range .Method}}
      {{- if eq (stringMethodOptionsExtension 53002 . | lower) "subscription"}}
        {{- template "Method" .}}
      {{- end}}
    {{- end}}
}
  {{- end}}
{{- end}}
