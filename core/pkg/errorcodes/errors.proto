syntax = "proto3";

package berty.errorcodes;

option go_package = "berty.tech/core/pkg/errorcodes";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
//import "google/protobuf/any.proto";

enum Code {
  option (gogoproto.goproto_enum_prefix) = false;


  ErrUndefined = 0;
  OK = 1; // when wrapped error is nil
  ErrBase = 2;
  ErrUnimplemented = 3;
  ErrRandomGeneratorFailed = 4;
  ErrUUIDGeneratorFailed = 5;
  ErrSerialization = 6;
  ErrDeserialization = 7;
  ErrPanic = 8;

  ErrEnvelope = 1000;
  ErrEnvelopeUntrusted = 1001;
  ErrEnvelopeNoDeviceFound = 1002;

  ErrEntity = 2000;
  ErrEntityInput = 2001;
  ErrEntityData = 2002;
  ErrEntityExists = 2003;

  ErrNet = 3000;
  ErrNetAnotherClientConnected = 3001;
  ErrNetStream = 3002;
  ErrNetQueue = 3003;
  ErrNetDial = 3004;
  ErrNetPing = 3005;

  ErrNetP2P = 3100;
  ErrNetP2PIdentity = 3101;
  ErrNetP2PPublicKey = 3102;


  ErrEvent = 4000;
  ErrEventSender = 4001;
  ErrEventData = 4002;

  ErrValidation = 5000;
  ErrValidationInput = 5001;
  ErrValidationMyself = 5002;

  ErrPagination = 6000;

  ErrDb = 7000;
  ErrDbCreate = 7001;
  ErrDbUpdate = 7002;
  ErrDbDelete = 7003;
  ErrDbNothingFound = 7004;

  ErrCrypto = 8000;
  ErrCryptoSig = 8100;
  ErrCryptoSigMismatch = 8101;
  ErrCryptoSigFormat = 8102;
  ErrCryptoEncrypt = 8200;
  ErrCryptoDecrypt = 8300;
  ErrCryptoKey = 8400;
  ErrCryptoKeyGen = 8401;
  ErrCryptoKeyDecode = 8402;
  ErrCryptoSigchain = 8500;

  ErrAccManager = 9000;
  ErrAccManagerInitNode = 9001;
  ErrAccManagerDb = 9002;
  ErrAccManagerDbInit = 9003;
  ErrAccManagerDbDrop = 9004;
  ErrAccManagerDbMig = 9005;
  ErrAccManagerDbDir = 9006;
  ErrAccManagerNotOpened = 9007;
  ErrAccManagerCfg = 9100;
  ErrAccManagerCfgName = 9101;
  ErrAccManagerCfgPassphrase = 9102;

  ErrAccManagerCfgNet = 9104;
  ErrAccManagerCfgGrpcSrv = 9105;
  ErrAccManagerBot = 9200;
  ErrAccManagerBotInit = 9201;
  ErrAccManagerBotExited = 9202;

  ErrContactReq = 10000;
  ErrContactReqKey = 10001;
  ErrContactReqKeyMissing = 10002;
  ErrContactReqExisting = 10003;
  ErrContactReqMyself = 10004;

  ErrCfg = 11000;
  ErrCfgMissing = 11001;
  ErrCfgMyself = 11002;
  ErrCfgDevices = 11003;

  ErrSenderAlias = 12000;
  ErrSenderAliasGen = 12001;
  ErrSenderAliasNoCandidates = 12002;
  ErrSenderAliasUpdateFailed = 12003;

  ErrConversation = 13000;
  ErrConversationMembers = 13001;
  ErrConversationNotEnoughMembers = 13002;
}

// Metadata is designed to be used as grpc status detail
message Metadata {
  // unique enum code number to identify the error
  Code code = 1;

  // extended code (see hierarchy.go)
  repeated Code extended_codes = 2;

  // used for templated errors (i18n)
  map<string, string> placeholders = 3;

  // nested/wraped errors
  Metadata parent = 4;

  // this field will be a duplicate for the top-level error and then skipped,
  // but this field is particularly useful to get debugging info when looking up parent errors.
  string message = 5;

  // caller is the first line of a stacktrace.
  string caller = 6;

  // other ideas: UUID, date, severity/log-level
}
