syntax = "proto3";

package berty.daemon;

option go_package = "berty.tech/core/daemon";

service Daemon {
  rpc DropDatabase (Void) returns (Void) {};
  rpc GetLocalGrpcInfos (Void) returns (GRPCInfos) {};
  rpc GetNetworkConfig (Void) returns (NetworkConfig) {};
  rpc GetPort (Void) returns (GetPortResponse) {};
  rpc Initialize (Config) returns (Void) {};
  rpc GetBotState (Void) returns (BotState) {};
  rpc ListAccounts (Void) returns (ListAccountsResponse) {};
  rpc Panic (Void) returns (Void) {};
  rpc Restart (Void) returns (Void) {};
  rpc SetCurrentRoute (SetCurrentRouteRequest) returns (Void) {};
  rpc Start (StartRequest) returns (Void) {};
  rpc StartBot (Void) returns (Void) {};
  rpc StartLocalGRPC (Void) returns (Void) {};
  rpc StopBot (Void) returns (Void) {};
  rpc StopLocalGRPC (Void) returns (Void) {};
  rpc UpdateNetworkConfig (NetworkConfig) returns (Void) {};
}

message Void {}

message SetCurrentRouteRequest {
  string route = 1;
}

message BotState {
  bool isBotRunning = 1;
}

message StartRequest {
  string nickname = 1;
}

// @TODO: switch to protobuf message instead of json
message GRPCInfos {
  string json = 1;
}

// Network Config
message NetworkConfig {
  bool peerCache = 1;
  string identity = 2;
  repeated string bootstrap = 3;
  repeated string bindP2P = 5;
  bool mdns = 6;
  bool privateNetwork = 7;
  bool ipfs = 8; // @TODO: implement me
  bool mobile = 9;
}

message SQLConfig {
  string name = 1;
  string key = 2;
}

message Config {
  enum StoreType {
    StoreMemory = 0;
    StorePersist = 1;
    StoreNoop = 2;
  }

  SQLConfig sqlOpts = 1;
  string grpcBind = 2;
  string grpcWebBind = 3;
  bool hideBanner = 4;
  bool dropDatabase = 5;
  bool initOnly = 6;
  bool withBot = 7;
  bool notification = 8;
  string privateKeyFile = 12;
  NetworkConfig networkConfig = 13;
  bool noP2P = 14;
  StoreType storeType = 15;
}

// @TODO: list all ports available
message GetPortResponse {
  int32 grpcWebPort = 2;
}

message ListAccountsResponse {
  repeated string accounts = 1;
}
