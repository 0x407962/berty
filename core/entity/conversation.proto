syntax = "proto3";

package berty.entity;

option go_package = "berty.tech/core/entity";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "pkg/validate/validate.proto";

import "api/protobuf/graphql/graphql.proto";
import "entity/contact.proto";
import "entity/message.proto";
import "entity/err.proto";

message Conversation {
  //
  // gorm fields
  //

  string id = 1 [(gql.graphql_id) = true, (gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID", (validate.min_len) = 1];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp read_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  //
  // metadata
  //

  string title = 20;
  string topic = 21;
  string infos = 22;

  Kind kind = 23;

  //
  // associations
  //

  repeated ConversationMember members = 100 [
		(gogoproto.moretags) = "gorm:\"foreignkey:ConversationID;association_foreignkey:ID\""
	]; // HasMany to ConversationMember.Conversation

  enum Kind {
    Unknown = 0;
    OneToOne = 1;
    Group = 2;
  }
}

message ConversationMember {
  //
  // gorm fields
  //

  string id = 1 [(gql.graphql_id) = true, (gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID", (validate.min_len) = 1];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp read_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

  enum Status {
    Unknown = 0;
    Owner = 1;
    Active = 2;
    Blocked = 3;
    // Alumni = 4; // if we want to keep track of removed ones
    // Invited = 5; // if we want to add an invite step
  }

  //
  // metadata
  //

  Status status = 10;

  //
  // associations
  //

  Contact contact = 100 [
		(validate.required) = true,
		(validate.skip) = false
	];

  string conversation_id = 101 [
    (gogoproto.customname) = "ConversationID",
    (validate.min_len) = 1,
		(gql.graphql_id) = true
  ]; // backref

  string contact_id = 102 [
    (gogoproto.customname) = "ContactID",
   	(validate.min_len) = 1,
		(gql.graphql_id) = true
  ];

  Conversation conversation = 103 [
		(gogoproto.moretags) = "gorm:\"PRELOAD:false;foreignkey:ID;association_foreignkey:ConversationID\"",
		(gql.graphql_unexported) = true
	];
}
