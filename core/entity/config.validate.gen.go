// this file was generated by protoc-gen-gotemplate

package entity

import (
	"github.com/pkg/errors"

	"berty.tech/core/pkg/errorcodes"
	"berty.tech/core/pkg/validate/validator"
)

var (
	_ = errors.New
	_ = validator.IsContactKey
	_ = errorcodes.IsSubCode
)

func (m *Config) Validate() error {
	if m == nil {
		return nil
	}

	// handling field: ID - name:"id" number:1 label:LABEL_OPTIONAL type:TYPE_STRING json_name:"id" options:<[]:"ID" 65006:"gorm:\"primary_key\"" >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: CreatedAt - name:"created_at" number:2 label:LABEL_OPTIONAL type:TYPE_MESSAGE type_name:".google.protobuf.Timestamp" json_name:"createdAt" options:<65001:0 65010:1 >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	if v, ok := interface{}(m.GetCreatedAt()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return errors.Wrap(err, "embedded message verification failed: CreatedAt")
		}
	}

	// handling field: UpdatedAt - name:"updated_at" number:3 label:LABEL_OPTIONAL type:TYPE_MESSAGE type_name:".google.protobuf.Timestamp" json_name:"updatedAt" options:<65001:0 65010:1 >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	if v, ok := interface{}(m.GetUpdatedAt()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return errors.Wrap(err, "embedded message verification failed: UpdatedAt")
		}
	}

	// handling field: Myself - name:"myself" number:5 label:LABEL_OPTIONAL type:TYPE_MESSAGE type_name:".berty.entity.Contact" json_name:"myself" options:<[]:true []:false >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=true, min_items=0, max_items=0)
	if m.GetMyself() == nil {
		return errors.New("Myself is required")
	}

	if v, ok := interface{}(m.GetMyself()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return errors.Wrap(err, "embedded message verification failed: Myself")
		}
	}

	// handling field: MyselfID - name:"myself_id" number:6 label:LABEL_OPTIONAL type:TYPE_STRING json_name:"myselfId" options:<[]:"MyselfID" >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: CurrentDevice - name:"current_device" number:7 label:LABEL_OPTIONAL type:TYPE_MESSAGE type_name:".berty.entity.Device" json_name:"currentDevice"  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	if v, ok := interface{}(m.GetCurrentDevice()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return errors.Wrap(err, "embedded message verification failed: CurrentDevice")
		}
	}

	// handling field: CurrentDeviceID - name:"current_device_id" number:8 label:LABEL_OPTIONAL type:TYPE_STRING json_name:"currentDeviceId" options:<[]:"CurrentDeviceID" >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: CryptoParams - name:"crypto_params" number:9 label:LABEL_OPTIONAL type:TYPE_BYTES json_name:"cryptoParams"  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: PushRelayPubkeyAPNS - name:"push_relay_pubkey_apns" number:10 label:LABEL_OPTIONAL type:TYPE_STRING json_name:"pushRelayPubkeyApns" options:<[]:"PushRelayPubkeyAPNS" >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: PushRelayPubkeyFCM - name:"push_relay_pubkey_fcm" number:11 label:LABEL_OPTIONAL type:TYPE_STRING json_name:"pushRelayPubkeyFcm" options:<[]:"PushRelayPubkeyFCM" >  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: NotificationsEnabled - name:"notifications_enabled" number:12 label:LABEL_OPTIONAL type:TYPE_BOOL json_name:"notificationsEnabled"  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: NotificationsPreviews - name:"notifications_previews" number:13 label:LABEL_OPTIONAL type:TYPE_BOOL json_name:"notificationsPreviews"  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)

	// handling field: DebugNotificationVerbosity - name:"debug_notification_verbosity" number:14 label:LABEL_OPTIONAL type:TYPE_ENUM type_name:".berty.entity.DebugVerbosity" json_name:"debugNotificationVerbosity"  (is_contact_key=false, defined_only=false, min_len=0, max_len=0, skip=false, required=false, min_items=0, max_items=0)
	return nil
}
