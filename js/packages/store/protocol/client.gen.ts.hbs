import * as api from '@berty-tech/api'

{{#with (lookup "berty.protocol")}}
	{{#each nested}}
		{{#if (eq (typeof this) "Service")}}
		export type Commands<State> = {
				{{#each methods}}
					{{case 'camel' name}}: (
						state: State,
						action: {
							payload: {
								id: string,
								{{#each resolvedRequestType.fields}}
									{{@key}}: {{#with (convertScalarType type)~}}
										{{this}},
									{{else}}
										api{{inamespace resolvedType}},
									{{/with}}
								{{/each}}
							}
						}
					) => State
				{{/each}}
			}
		{{/if}}
		{{#if (and (eq (typeof this) "Enum") (eq name "EventType"))}}
			export type Events<State> = {
				{{#each values}}
					{{#with (removeFirst @key "EventType") as | eventName |}}
						{{case 'camel' eventName}}: (
							state: State,
							action: {
								payload: {
									aggregateId: string,
									eventContext: api.berty.protocol.IEventContext,
									metadata: api.berty.protocol.IGroupMetadata,
									event: {
										{{#with (lookup "berty.protocol")}}
											{{#each nested}}
												{{#if (matchInconsistant name eventName)}}
													// {{eventName}} seems event of type {{name}}
													{{#each fields}}
														{{@key}}: {{#with (convertScalarType type)~}}
															{{this}},
														{{else}}
															api{{inamespace resolvedType}},
														{{/with}}
													{{/each}}
												{{/if}}
											{{/each}}
										{{/with}}
									}
								}
							}
						) => State
					{{/with}}
				{{/each}}
			}
		{{/if}}
	{{/each}}
{{/with}}
